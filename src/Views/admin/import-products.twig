{% include 'admin/partials/header.twig' with { isSuccess, message, title: 'Import Products' } %}
{% if isImporting != true %}
<div class="wrap">
    <form method="POST" action="{{ urls.importProducts }}">
        {{ function('wp_nonce_field', groupName) }}
        <table class="form-table cws5baddi shadow-card" role="presentation">
            <tbody>
                <tr>
                    <th scope="row">
                        <label for="cws5baddi_in_stock_for">{{ 'In stock for'|translate }}</label>
                    </th>
                    <td>
                        <input type="number" name="in_stock_for" min="1" max="60" step="1" value="60" id="cws5baddi_in_stock_for" aria-describedby="cws5baddi_in_stock_for_description"/>
                        <p class="description" id="cws5baddi_in_stock_for_description">
                            {{ 'In stock on the platform for up to 60 days.'|translate }}
                        </p>
                    </td>
                </tr>
                <tr>
                    <th scope="row">
                        <label for="cws5baddi_product_description_language">{{ 'Product description language'|translate }}</label>
                    </th>
                    <td>
                        <select id="cws5baddi_product_description_language" name="product_description_language" aria-describedby="cws5baddi_product_description_language_description">
                            <option values="Multilanguage" {% if values.cws5baddi_product_description_language is empty or values.cws5baddi_product_description_language != 'Multilanguage' %}selected{% endif %}>{{ 'Multilanguage'|translate }}</option>
                            {% for value, label in languages %}
                                {% if value in values.cws5baddi_supported_product_description_languages %}
                                    <option value="{{ value }}" {% if values.cws5baddi_product_description_language == value %}selected{% endif %}>{{ label }}</option>
                                {% endif %}
                            {% endfor %}
                        </select>
                        <p class="description" id="cws5baddi_product_description_language_description">
                            {{ 'Select a language of product descriptions.'|translate }}
                        </p>
                    </td>
                </tr>
                <tr>
                    <th scope="row">
                        <label for="cws5baddi_region">{{ 'Region'|translate }}</label>
                    </th>
                    <td>
                        <select id="cws5baddi_region" name="region" aria-describedby="cws5baddi_region_description">
                            {% for region in values.cws5baddi_supported_regions %}
                                <option value="{{ region }}" {% if region == 'WORLDWIDE' %}selected{% endif %}>{{ region }}</option>
                            {% endfor %}
                        </select>
                        <p class="description" id="cws5baddi_region_description">
                            {{ 'Regions available on the platform.'|translate }}
                        </p>
                    </td>
                </tr>
                <tr>
                    <th scope="row">
                        <label for="cws5baddi_platform">{{ 'Platform'|translate }}</label>
                    </th>
                    <td>
                        <select id="cws5baddi_platform" name="platform" aria-describedby="cws5baddi_platform_description">
                            {% for platform in values.cws5baddi_supported_platforms %}
                                <option value="{{ platform }}" {% if platform == 'None' %}selected{% endif %}>{{ platform }}</option>
                            {% endfor %}
                        </select>
                        <p class="description" id="cws5baddi_platform_description">
                            {{ 'Platforms available on the platform.'|translate }}
                        </p>
                    </td>
                </tr>
            </tbody>
        </table>

        <p class="submit">
            <input {% if isApiConnected != true %}disabled{% endif %} type="submit" name="submit" id="submit" class="button button-primary" value="{{ 'Import products'|translate }}">
        </p>
    </form>
</div>
{% else %}
<div class="wrap" style="background: white; text-align: center;">
    <img id="importing-products-loader" src="{{ 'img/loader.gif'|assets }}" style="width: 35%; object-fit: none;"/>
    <p id="importing-products-output" style="padding: 1rem; font-size: 14pt;"></p>
</div>
{% endif %}
{% include 'admin/partials/footer.twig' with { isApiConnected } %}

{% if isImporting == true %}
<script type="text/javascript">
    async function cws5baddiImportProducts(products) {
        await Promise.all(
            products.map(async (product) => {
                if (
                    typeof product.images === 'object'
                    && typeof product.images.at(-1) !== 'undefined'
                    && typeof product.images.at(-1)['image'] === 'string'
                ) {
                    let response = await fetch(product.images.at(-1)['image']);

                    product.image = response.url;
                }

                response = await fetch(
                    `{{ urls.rest ~ namespace }}/v1/products/virtual`,
                    {
                        method: 'POST',
                        headers: {
                            'X-WP-Nonce': '{{ apiNonce }}',
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(product)
                    }
                );

                return Promise.resolve();
            })
        );

        setTimeout(() => {
            window.location.replace('{{ urls.wooProducts }}');
        }, 1000);
    }

    jQuery(async function () {
        try {
            let body = {
                inStockFor: {{ inStockFor }},
                productDescriptionLanguage: '{{ productDescriptionLanguage }}',
                region: '{{ region }}',
                platform: '{{ platform }}',
            };

            let response = await fetch(
                `{{ urls.rest ~ namespace }}/v1/products/import`,
                {
                    method: 'POST',
                    headers: {
                        'X-WP-Nonce': '{{ apiNonce }}',
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(body)
                }
            );

            if (! response.ok) {
                throw new Error();
            }

            let products = await response.json();

            if (typeof products !== 'undefined' && products.length > 0) {
                await cws5baddiImportProducts(products);
            } else {
                jQuery('#importing-products-loader').hide();
                jQuery('.updated').hide();
                jQuery('#importing-products-output').text(`{{ 'There\'s no product to import! please try with another criteria...'|translate }}`);

                setTimeout(() => {
                    window.location.reload();
                }, 3000);
            }


        } catch (e) {
            {% if isDebugMode == true %}
            console.log(e);
            {% endif %}

            jQuery('#importing-products-loader').hide();
            jQuery('.updated').hide();
            jQuery('#importing-products-output').text(`{{ 'Something going wrong! please try again or contact support...'|translate }}`);
        }
    });
</script>
{% endif %}
